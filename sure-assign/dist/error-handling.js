"use strict";exports.__esModule=!0,exports.ErrorHandler=void 0;var ErrorHandler=function(){function s(s){this.assigner=s}return s.prototype.logOnVerbose=function(s,e){void 0===e&&(e="log"),this.assigner.options.verbose&&console[e](s)},s.prototype.onFaillure=function(s,e){var n=s.message,s=s.reason;if(e){if(!this.assigner.options.complient)throw n;this.logOnVerbose(n,"warn"),e.reasons.push(s)}},s.prototype.checkExistance=function(s){var e=s.ciblingClassName,n=s.json,s=s.checks;this.assigner.options.unsure?this.onFaillure({message:"These fields .* will been assigned to your object of type "+e,reason:"unexists"},s):null==n&&this.onFaillure({message:"Assignement failed : Cannot assign a null or unexisting object to an instance of "+e,reason:"unexists"},s)},s.prototype.checkConsistancy=function(s){var e=s.ciblingClassName,n=s.json,s=s.checks;"object"!=typeof n&&this.onFaillure({message:"Assignement failed : Cannot assign < "+n+" > of type "+n.constructor.name+" with an instance of type "+e,reason:"unconsistant"},s)},s.prototype.checkSimilarity=function(s){var e=s.instance,n=s.json,i=s.checks,s="Object"===(s=s.ciblingClassName)?"Annonymous-Object":s;Object.is(e,n)&&this.onFaillure({message:"Assignement failed : Cannot assign instance of type "+s+' to itself"',reason:"similar"},i)},s.prototype.checkFieldMatch=function(s){var e=s.ciblingClassName,n=s.instance,i=s.checks,t=s.key,o=this.assigner,s=o.options;if(!(s.unsure||void 0===t||t in n)){e="Assignement failed : >"+t+"< is a property missing from "+e+".";if(o&&!o.options.complient)throw e;this.logOnVerbose(e,"warn"),i.subset.push(t)}},s.prototype.checkSizes=function(s){var e=this,n=s.instance,i=s.json,t=s.checks,o=s.ciblingClassName;t.reasons.includes("unexists")||t.reasons.includes("unconsistant")||i&&Object.keys(i).forEach(function(s){e.checkFieldMatch({ciblingClassName:o,instance:n,json:i,checks:t,key:s})})},s.prototype.validateAssignement=function(s,e){var n=s.constructor.name,i={reasons:[],subset:[]},t={ciblingClassName:n,instance:s,json:e,checks:i};return this.checkExistance(t),this.checkSimilarity(t),this.checkConsistancy(t),this.checkSizes({ciblingClassName:n,instance:s,json:e,checks:i}),i.subset.length&&(i.subset.forEach(function(s){return delete e[s]}),i.reasons.push("missing property")),i},s}();exports.ErrorHandler=ErrorHandler;